<?php

namespace App\Presenters;

use Nette;
use App\Model;
use  Nette\Application\UI;
use Nette\Application\UI\Form;


class NetPresenter extends BasePresenter
{

	public function renderDefault()
	{
		$this->template->anyVariable = 'any value';
		//$this->netGetData();
		$this->netGetActualSeting();
	}
	
	// editace sitoveho nastaveni
	protected function createComponentUpdateNetForm($cardId)
	{
		$status = array(
			'0' => 'No',
			'1' => 'Yes',
		);
		$form = new UI\Form;
		$form->addRadioList('dhcp', 'DHCP:', $status);
		$form->addText('ip', 'IP:');
		$form->addText('netmask', 'Netmask:');
		$form->addText('gateway', 'gateway:');
		$form->addText('dns', 'Primary DNS server:');
		
		$form->addSubmit('insert', 'edit');
		$form->onSuccess[] = array($this, 'updateNet');
		
		// set defaults
		//$this->netGetData(); //get template data
		$this->netReadInterfaceSeting();
		$form->setDefaults(array(
			'dhcp' => $this->template->dhcp,
			'ip' => $this->template->ip,
			'netmask' => $this->template->netmask,
			'gateway' => $this->template->gateway,
			'dns' => $this->template->dns,
		));
		return $form;
	}
	
	//vlola se po uspesne odeslani formulare
	public function updateNet(UI\Form $form, $values)
	{	
		$this->template->ip=$values->ip;
		$this->template->netmask=$values->netmask;
		$this->template->gateway=$values->gateway;
		$this->template->dns=$values->dns;
		$this->template->dhcp=$values->dhcp;
		$this->netWriteInterfaceSeting(); // update network seting
		
		$this->flashMessage('Sucessfuly update net setting:');
		//$this->redirect('Homepage:');
		$this->redirect('Net:');
	}
	
	public function renderUpdateNetForm($noID)
	{
		//jen definice pro router, aby nasel cestu a priradil si sablonu showNewCard.late v ni je pak vlozena komponenta newCardForm ktera vytvori a vozi formular definovany vyse
	}

	protected function netGetData()
	{
		if (!isset($this->template->ip)) $this->template->ip = '10.10.1.2';
		if (!isset($this->template->netmask)) $this->template->netmask= '255.255.0.2';
		if (!isset($this->template->gateway)) $this->template->gateway = '10.10.1.1';
		if (!isset($this->template->dns)) $this->template->dns = '10.10.1.1';
		if (!isset($this->template->dhcp)) $this->template->dhcp = 1;
		// get IP:
		// /sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'
		// get netmask:
		// /sbin/ifconfig eth0 | grep 'Mask:' | cut -d: -f4 | awk '{ print $1}'
		// get gateway:
		// /sbin/ip route | awk '/default/ { print $3 }'
		// get DNS:
		// cat /etc/resolv.conf |grep -i nameserver|head -n1|cut -d ' ' -f2
	}
	
	protected function netGetActualSeting()
	{
		// need edit /etc/sudoers to enable apache (www-data user) run script as superuser whithou press password
		// add line:
		//www-data  ALL=NOPASSWD: /etc/network/pi/getNetSeting.sh
		//run scan bash program generate output with seting report
		$output=shell_exec ("/usr/bin/sudo /etc/seahu/getNetSeting.sh");
		$lines=explode("\n", $output );
		$this->template->mac = $lines[0];
		$this->template->ip = $lines[1];
		$this->template->netmask = $lines[2];
		$this->template->gateway = $lines[3];
		$this->template->dns = $lines[4];
		if ($lines[5]=="dhcp") $this->template->dhcp = 1;
		else  $this->template->dhcp = 0;
		//$this->template->xx = $aa;
	}

	protected function netReadInterfaceSeting()
	{
		// prepare emptny seting
		$this->template->ip = '';
		$this->template->netmask= '';
		$this->template->gateway = '';
		$this->template->dns = '';
		$this->template->dhcp = 0;
		// read setting from interface file
		$lines = file('/etc/network/interfaces.d/eth0');
		foreach ($lines as $line_num => $line) {
			$words=explode(" ", trim($line) );
			if ($words[0]=="address")  $this->template->ip = $words[1];
			if ($words[0]=="netmask")  $this->template->netmask = $words[1];
			if ($words[0]=="gateway")  $this->template->gateway = $words[1];
			if ($words[0]=="dns-nameservers")  $this->template->dns = $words[1];
			if ($words[0]=="iface")  {
				if ($words[3]=="dhcp") $this->template->dhcp = 1;
				else 	$this->template->dhcp = 0;			
			}
		}
	}
	protected function netWriteInterfaceSeting()
	{
		// write new config to interface file
		$context="";
		if ($this->template->dhcp == 0) {
			$context.="iface eth0 inet static\n";
			if ($this->template->ip != "" ) $context.="	address ". $this->template->ip ."\n";
			if ($this->template->netmask != "" ) $context.="	netmask ". $this->template->netmask ."\n";
			if ($this->template->gateway != "" ) $context.="	gateway ". $this->template->gateway ."\n";
			if ($this->template->dns != "") $context.="	dns-nameservers ". $this->template->dns ."\n";
		}
		else {
			$context.="iface eth0 inet dhcp\n";
		}
		file_put_contents('/etc/network/interfaces.d/eth0', $context);
	}
}
